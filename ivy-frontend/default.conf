server {
    # ---- basic configuration ----
    server_name ivypowered.com;
    listen 443 ssl http2;
    root /var/www/public;

    # ---- SSL config ----
    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

    # ---- reusable FastCGI handler ----
    location @fastcgi {
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_path;
        fastcgi_pass unix:/var/run/php/php8.4-fpm.sock;
    }

    # ---- special cases ----

    # `.php` is disallowed
    location ~ \.php$ {
        return 404;
    }

    # 404 page
    error_page 404 = @error404;
    location @error404 {
        set $fastcgi_path /404.php;
        try_files /nonexistent @fastcgi;
    }

    # /api
    location /api {
        set $fastcgi_path /api.php;
        try_files /nonexistent @fastcgi;
    }

    # /docs/images
    location /docs/images/ {
        alias /var/www/docs_build/images/;
        try_files $uri =404;
    }

    # /docs
    location /docs {
        set $fastcgi_path /docs.php;
        try_files /nonexistent @fastcgi;
    }

    # index page
    location = / {
        set $fastcgi_path /index.php;
        try_files /nonexistent @fastcgi;
    }

    # ---- everything else ----
    location / {
        try_files $uri @php_handler;
    }

    location @php_handler {
        # Remove trailing slash if present
        set $php_uri $uri;
        if ($uri ~ ^(.*)/+$) {
            set $php_uri $1;
        }

        # Check if the PHP file exists
        if (!-f $document_root$php_uri.php) {
            return 404;
        }

        # Serve PHP file
        set $fastcgi_path $php_uri.php;
        try_files /nonexistent @fastcgi;
    }
}
